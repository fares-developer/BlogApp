A continuación se detalla paso a paso la creación de la aplicación:

1. Creamos la arquitectura de la app, las carpetas data, ui, domain, core y presentation.

2. Creamos la carpeta de navegación en res.

3. En el main_activity creamos fragment_container_view, con el nav_host_fragment y el resto de propiedades.

4. Creamos el modelo de la app:
    -Creamos un paquete llamado model dentro del paquete data
    -Creamos un data class llamado post que contendrá la información de cada uno de los post

5. Añadimos viewBinding al gradle.

6. Creamos una paquete llamado home en ui, es donde almacenaremos el homeScreenFragment
    -Creamos el homeScreenFragment eliminando la plantilla y pasando directament el layout en el constructor
    -Añadimos el onViewCreated al fragment.

7. Abrimos el layout del fragment
    -Cambiamos el FragmeLayout por un LinearLayout
    -Añadimos un RecyclerView

8. Creamos un Layout para cada item de post
    -Creamos un fichero llamado post_item_view
    -Cambiamos constraintLayout por LinearLayout
    -Creamos otro linearLayout para la cabecera del perfil, nombre, y la fecha de subida
    -Añadimos el circleImageView del profile_name
    -Añadimos el TextView del profile_name
    -Añadimos el TextView de la hora de subida
    -Añadimos el ImageView del post

9. Creamos un adapter para recyclerView
    -Creamos un nuevo paquete en ui/home de nombre adapter
    -Creamos el HomeScreenAdapter

10. Creamos un BaseViewHolder dentro del paquete core

11. Le pasamos el BaseViewHolder al HomeScreenAdapter e implementamos los métodos de la interfaz

12. Creamos la clase interna viewHolder de nombre HomeScreenViewHolder que va a poner los datos.

13. Establecemos el adaptador en el fragment HomeScreen

14. Creamos una interfaz en el paquete domain de nombre HomeScreenRepo
    -Creamos un método llamado getLatestPost encargado de la llamada al servidor

15. Creamos un sealed class en el paquete core llamado Resource

16. Creamos nuestro un nuevo paquete llamado remote que contendrá nuestro dataSource
    -Creamos nuesgtra clase HomeScreenDataSource
    -Creamos el método suspend llamado getLatestPosts igual que en HomeScreenRepo

17. Creamos las las colecciones y documents en firestore

18. Implementamos getLatestPosts de HomeScreenDataSource para hacer la llamada a firebase

19. Creamos la clase HomeScreenViewModel en el paquete de presentation

20. Creamos el HomeScreenViewModelFactory

21. En el HomeScreenFragment Creamos un viewModel delegando viewModels y pasando el factory

22. Creamos un progress_bar en el home_fragment

23. Importamos las librerías de firebase auth

24. En el paquete ui creamos un nuevo paquete llamado auth que va contener la interfaz de autenticación
    -Creamos un fragment llamado loginFragment

25. Modificamos el fragment_login layout añadiendo usuario contraseña y otros.

26. Añadimos el login_fragment al main_graph y lo establecemos como inicio de navegación

27. Creamos una instancia de FirebaseAuth en el LoginFragment y lo delegamos a by lazy

28. Creamos los métodos necesarios para validar usuario y password, logearse y otros.




